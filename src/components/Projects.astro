---
const bubbles = Array.from({ length: 10 }, (_, i) => i + 1);
import myIcon from '../../public/chain.svg';

const arr = [1,1,1,1]

import SingleProject from "../react/single-project.tsx"

type Projects = {
    [name: string]: {
        imgs: string[],
        description: string,
        links: {
            name:string,
            url:string
        }[]
    }
}

const projects : Projects = {
    "High Powered Computers ECommerce Site":{
        imgs:["/projects/hpc/home.png","/projects/hpc/gallery.png", "/projects/hpc/config.png"],
        description:"This site was made in Astro with standard HTML and CSS for the static elements and React for the product configurator section. The product data is being pulled from the company's Odoo instance. I was able to build a middleware server, and using graph QL, I fetch all the relevant data, and all submissions go right into their CRM. I utilized server-side caching of data to make load times lightning fast for this project!",
        links:[{name:"Checkout the site", url:"https://redbarnhpc.com/Servers"}]
    },
    "Think Red Barn Main Site":{
        imgs:["/projects/thinkredbarn/home.png", "/projects/thinkredbarn/web.png", "/projects/thinkredbarn/contact.png"],
        description:"This site was totally designed and built by me. The aim was to show how the company's many diverse services coalesce into a unified business offering. I accomplished this with interactive infographics and increased development efficiency by componentizing a good deal of the informational parts of the project. It features a reactive contact form which adds questions based on the user's stated interests. All contact forms go straight to the company's CRM by way of a custom middleware server interacting with its API.",
        links:[{name:"Checkout the site", url:"https://thinkredbarn.com/"}]
    },
    "Quiz Game":{
        imgs:["/projects/quiz/quiz.png", "/projects/quiz/score.png"],
        description:"I made this Game while teaching at a coding school. The Game allows users to select a category, difficulty settings, a time limit and the number of questions. My Goal was to make something fun and engadging to show what is possibel with js development the game is build with react and uses the Trivia API.",
        links:[{name:"Checkout the site", url:"https://quizbit.onrender.com/"},{name:"Checkout the code", url:"https://github.com/Decodedal/Quizbit"}],
    }
}


---

<div class="projects-title-container" id="projects">
    <div class="project-title-holder">
        <h4 class="projects-title">My Projects</h4>
    </div>
    <div class="projects-container">
        {Object.entries(projects).map(([name, values],index) => (
            <SingleProject client:load images={values.imgs} links={values.links} description={values.description} name={name} left={index%2 === 0 ? true : false}/>
        ))}
    </div>
    {bubbles.map(i => (
        <div class={`bubble bubble-${i}`}></div>
    ))}
</div>
